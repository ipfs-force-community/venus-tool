// Code generated by github.com/filecoin-project/venus/venus-devtool/api-gen. DO NOT EDIT.
package service

import (
	"context"

	address "github.com/filecoin-project/go-address"
	"github.com/filecoin-project/go-fil-markets/retrievalmarket"
	"github.com/filecoin-project/go-fil-markets/storagemarket"
	"github.com/filecoin-project/go-state-types/dline"
	cid "github.com/ipfs/go-cid"

	venusTypes "github.com/filecoin-project/venus/venus-shared/types"
	marketTypes "github.com/filecoin-project/venus/venus-shared/types/market"
)

type IServiceStruct struct {
	Internal struct {
		AddrList               func(ctx context.Context) ([]*AddrsResp, error)                                     ` GET:"/addr/list" `
		AddrOperate            func(ctx context.Context, params *AddrsOperateReq) error                            ` PUT:"/addr/operate" `
		ChainHead              func(ctx context.Context) (*venusTypes.TipSet, error)                               ` GET:"/chain/head" `
		MinerCreate            func(ctx context.Context, params *MinerCreateReq) (address.Address, error)          ` POST:"/miner/create" `
		MinerGetDeadlines      func(ctx context.Context, mAddr address.Address) (*dline.Info, error)               ` GET:"/miner/deadline" `
		MinerGetRetrievalAsk   func(ctx context.Context, mAddr address.Address) (*retrievalmarket.Ask, error)      ` GET:"/miner/retrievalask/" `
		MinerGetStorageAsk     func(ctx context.Context, mAddr address.Address) (*storagemarket.StorageAsk, error) ` GET:"/miner/storageask/" `
		MinerSetRetrievalAsk   func(ctx context.Context, p *MinerSetRetrievalAskReq) error                         ` PUT:"/miner/retrievalask/" `
		MinerSetStorageAsk     func(ctx context.Context, p *MinerSetAskReq) error                                  ` PUT:"/miner/storageask/" `
		MsgQuery               func(ctx context.Context, params *MsgQueryReq) ([]*MsgResp, error)                  ` GET:"/msg/query" `
		MsgReplace             func(ctx context.Context, params *MsgReplaceReq) (cid.Cid, error)                   ` POST:"/msg/replace" `
		MsgSend                func(ctx context.Context, params *MsgSendReq) (string, error)                       ` POST:"/msg/send" `
		RetrievalDealList      func(ctx context.Context) ([]marketTypes.ProviderDealState, error)                  ` GET:"/deal/retrieval" `
		SectorExtend           func(ctx context.Context, req SectorExtendReq) error                                ` PUT:"/sector/extend" `
		SectorGet              func(ctx context.Context, req SectorGetReq) ([]*SectorResp, error)                  ` GET:"/sector/get" `
		StorageDealList        func(ctx context.Context, miner address.Address) ([]marketTypes.MinerDeal, error)   ` GET:"/deal/storage" `
		StorageDealUpdateState func(ctx context.Context, req StorageDealUpdateStateReq) error                      ` PUT:"/deal/storage/state" `
	}
}

func (s *IServiceStruct) AddrList(p0 context.Context) ([]*AddrsResp, error) {
	return s.Internal.AddrList(p0)
}
func (s *IServiceStruct) AddrOperate(p0 context.Context, p1 *AddrsOperateReq) error {
	return s.Internal.AddrOperate(p0, p1)
}
func (s *IServiceStruct) ChainHead(p0 context.Context) (*venusTypes.TipSet, error) {
	return s.Internal.ChainHead(p0)
}
func (s *IServiceStruct) MinerCreate(p0 context.Context, p1 *MinerCreateReq) (address.Address, error) {
	return s.Internal.MinerCreate(p0, p1)
}
func (s *IServiceStruct) MinerGetDeadlines(p0 context.Context, p1 address.Address) (*dline.Info, error) {
	return s.Internal.MinerGetDeadlines(p0, p1)
}
func (s *IServiceStruct) MinerGetRetrievalAsk(p0 context.Context, p1 address.Address) (*retrievalmarket.Ask, error) {
	return s.Internal.MinerGetRetrievalAsk(p0, p1)
}
func (s *IServiceStruct) MinerGetStorageAsk(p0 context.Context, p1 address.Address) (*storagemarket.StorageAsk, error) {
	return s.Internal.MinerGetStorageAsk(p0, p1)
}
func (s *IServiceStruct) MinerSetRetrievalAsk(p0 context.Context, p1 *MinerSetRetrievalAskReq) error {
	return s.Internal.MinerSetRetrievalAsk(p0, p1)
}
func (s *IServiceStruct) MinerSetStorageAsk(p0 context.Context, p1 *MinerSetAskReq) error {
	return s.Internal.MinerSetStorageAsk(p0, p1)
}
func (s *IServiceStruct) MsgQuery(p0 context.Context, p1 *MsgQueryReq) ([]*MsgResp, error) {
	return s.Internal.MsgQuery(p0, p1)
}
func (s *IServiceStruct) MsgReplace(p0 context.Context, p1 *MsgReplaceReq) (cid.Cid, error) {
	return s.Internal.MsgReplace(p0, p1)
}
func (s *IServiceStruct) MsgSend(p0 context.Context, p1 *MsgSendReq) (string, error) {
	return s.Internal.MsgSend(p0, p1)
}
func (s *IServiceStruct) RetrievalDealList(p0 context.Context) ([]marketTypes.ProviderDealState, error) {
	return s.Internal.RetrievalDealList(p0)
}
func (s *IServiceStruct) SectorExtend(p0 context.Context, p1 SectorExtendReq) error {
	return s.Internal.SectorExtend(p0, p1)
}
func (s *IServiceStruct) SectorGet(p0 context.Context, p1 SectorGetReq) ([]*SectorResp, error) {
	return s.Internal.SectorGet(p0, p1)
}
func (s *IServiceStruct) StorageDealList(p0 context.Context, p1 address.Address) ([]marketTypes.MinerDeal, error) {
	return s.Internal.StorageDealList(p0, p1)
}
func (s *IServiceStruct) StorageDealUpdateState(p0 context.Context, p1 StorageDealUpdateStateReq) error {
	return s.Internal.StorageDealUpdateState(p0, p1)
}
